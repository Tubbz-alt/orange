/*
** Copyright 2014-2015 Robert Fratto. See the LICENSE.txt file at the top-level 
** directory of this distribution.
**
** Licensed under the MIT license <http://opensource.org/licenses/MIT>. This file 
** may not be copied, modified, or distributed except according to those terms.
*/ 
#ifndef __ORANGE_ERROR_H__ 
#define __ORANGE_ERROR_H__

#include "file.h"
#include "AST.h"

enum CMessageType {
	ERROR,
	WARNING,
	NO_COMPILE,
	NO_FILE
};

/**
 * CompilerMessage is a class to inform the user to know about errors and warnings.
 * It provides an interface to print out helpful information, like line numbers and 
 * printing out the code where the message occured.
 */
class CompilerMessage {
private:
	CMessageType m_type;
	std::string m_what;
	std::string m_file_path;
	int m_line_begin, m_line_end; 
	int m_column_begin, m_column_end;
public:
	/**
	 * Returns whether or not there is line information in this message.
	 *
	 * @return True if there is line info, false otherwise.
	 */
	bool hasLineInfo() const;

	/** 
	 * Returns the type of compiler message. Valid types are either an error
	 * or a warning.
	 *
	 * @return The type of compiler message.
	 */
	CMessageType type() const; 

	/**
	 * Returns the message string that the compiler generated.
	 *
	 * @return The message string generated by the compiler.
	 */
	std::string what() const;

	/**
	 * Returns a helpful message string, containing the what message
	 * and a picture of what the line of code looked like from the file.
	 *
	 * @return Complete string of the message.
	 */
	std::string string() const;

	/**
	 * Returns the file path that this message occured on.
	 *
	 * @return File this message occured on.
	 */
	std::string file_path() const;

	/**
	 * Returns the first line that this message occured on in the file.
	 *
	 * @return The first line in the file that this message occured on.
	 */
	int line_begin() const; 

	/**
	 * Returns the last line that this message occured on in the file, which
	 * may be the same as the first line. If not, this indicates a range.
	 *
	 * @return The last line in the file that this message occured on.
	 */
	int line_end() const;

	/**
	 * Returns the first column that this message occured on in the file.
	 *
	 * @return The first column in the file that this message occured on.
	 */
	int column_begin() const;

	/**
	 * Returns the last column that this message occured on in the file, which
	 * may be the same as the first column. If not, this indicates a range.
	 *
	 * @return The last column in the file that this message occured on.
	 */
	int column_end() const;

	CompilerMessage(CMessageType type, std::string what, std::string filePath, int lineBegin, int lineEnd, int colBegin, int colEnd);
	CompilerMessage(CodeElement element, std::string what);
};

#endif